# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs the shellcheck against the code
      - name: ShellCheck
        # You may pin to the exact commit or the version.
        # uses: ludeeus/action-shellcheck@94e0aab03ca135d11a35e5bfc14e6746dc56e7e9
        # uses: ludeeus/action-shellcheck@1.1.0
        uses: ludeeus/action-shellcheck@master
        with:
          # A space separated list of additional filename to check
          # additional_files: # optional, default is 
          # Paths to ignore when running ShellCheck
          # ignore_paths: # optional, default is 
          # Files to ignore when running ShellCheck
          ignore_names: README.md LICENSE
          # Minimum severity of errors to consider. Options: [error, warning, info, style]
          severity: error
          # Run shellcheck on _all_ files at once, instead of one at a time
          # Note: This can turn into a problem if you have enough script files to overwhelm the maximum argv length on your system.
          check_together: 'yes'
          # Directory to be searched for files. Defaults to .
          # scandir: # optional, default is .
          # Set to true to skip using problem-matcher
          # disable_matcher: # optional, default is false
          # Output format (checkstyle, diff, gcc, json, json1, quiet, tty)
          # format: # optional, default is gcc
